pipeline {
  agent none

  environment {
    SONAR_URL = "http://34.239.45.83:9000/"
  }

  stages {
    stage('Checkout') {
      agent { docker { image 'maven:3.9.6-eclipse-temurin-17' } }
      steps {
        echo 'Cloning the repo...'
        // git branch: 'main', url: 'https://github.com/Vani1B/End-End-Jenkins-to-Argocd.git'
      }
    }

    stage('Build and Test') {
      agent { docker { image 'maven:3.9.6-eclipse-temurin-17' } }
      steps {
        sh '''
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          rm -rf target/sonar || true
          mvn clean package
        '''
      }
    }

    stage('Static Code Analysis') {
      agent { docker { image 'maven:3.9.6-eclipse-temurin-17' } }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar \
              -Dsonar.token=$SONAR_AUTH_TOKEN \
              -Dsonar.host.url=$SONAR_URL
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      agent any
      environment {
        DOCKER_IMAGE = "vanib/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
          '''
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      agent any
      environment {
        GIT_REPO_NAME = "End-End-Jenkins-to-Argocd"
        GIT_USER_NAME = "Vani1B"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "vani.boddu@gmail.com"
            git config user.name "Vani1B"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
