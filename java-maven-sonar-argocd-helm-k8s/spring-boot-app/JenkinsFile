pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    SONAR_URL          = "http://54.225.39.35:9000"
    GIT_REPO_NAME      = "End-End-Jenkins-to-Argocd"
    GIT_USER_NAME      = "Vani1B"
    APP_DIR            = "java-maven-sonar-argocd-helm-k8s/spring-boot-app"
    MANIFEST_PATH      = "java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml"
    DOCKER_IMAGE       = "abhishekf5/ultimate-cicd:${BUILD_NUMBER}"
  }

  stages {

    stage('Checkout') {
      steps {
        checkout scm // This uses the repo configured in the job or webhook
      }
    }

    stage('Build and Test') {
      steps {
        dir("${APP_DIR}") {
          sh 'mvn clean package'
        }
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          dir("${APP_DIR}") {
            sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_URL'
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          dir("${APP_DIR}") {
            sh 'docker build -t $DOCKER_IMAGE .'
            sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
            sh 'docker push $DOCKER_IMAGE'
          }
        }
      }
    }

    stage('Update Deployment Manifest and Push') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "vani.boddu@gmail.com"
            git config user.name "${GIT_USER_NAME}"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" ${MANIFEST_PATH}
            git add ${MANIFEST_PATH}
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }

  post {
    success {
      echo '✅ Pipeline completed successfully!'
    }
    failure {
      echo '❌ Pipeline failed. Check logs for details.'
    }
    always {
      cleanWs() // optional: cleans up the workspace after each run
    }
  }
}
